// 백준: 알고리즘의 수업 - 알고리즘의 수행 시간 6
// https://www.acmicpc.net/problem/24267
// 2023-12-24

/*
ps. 이 문제는 수학, 조합론에 대해 알지 못하면.. 쉽지 않습니다..저처럼요..
여기서 나오는 3개의 중첩 for문의 목적은 원소 n개에 대해서 3개의 수로 가능한 총
조합이 몇개인지 구하는 알고리즘과 동일합니다. i는 i부터 n-2까지 실행되는데, 이건
j와 k가 서로 다른 원소를 선택할 수 있는 공간을 주기 위함입니다. (i가 1부터 5까지
실행되어버리면, 중복이 발생하니까) i는 i부터 n-2까지 마지막 두개를 제외하고 모든
조합을 고려하고, j는 i+1부터 n-1까지의 모든 조합을 고려하고, k는 j+1부터 n까지의
모든 조합을 고려함으로써 원소 n개에 대해서 3개의 수로 가능한 총 조합의 수를
구하는 알고리즘입니다. 따라서, 이 로직의 총 실행 횟수를 구하려면 원소 n개에
대해서 가능한 숫자 3개 배열의 총 조합 수를 구하면 됩니다. 조합론에서 사용되는
조합 공식을 사용해서 총 수를 구할 수 있습니다.
*/

long long combination(long long n) {
    if (n < 3) return 0;  // nC3은 n이 3 이상일 때만 유효
    return (n * (n - 1) / 2) * (n - 2) / 3;  // 조합 공식 적용
}

#include <iostream>
int main() {
    long long n;
    std::cin >> n;
    std::cout << combination(n) << std::endl;
    std::cout << "3";
    return 0;
}